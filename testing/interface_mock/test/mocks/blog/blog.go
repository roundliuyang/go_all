// Code generated by MockGen. DO NOT EDIT.
// Source: D:\allevery\go_all\testing\interface_mock\blog\blog.go
//
// Generated by this command:
//
//	mockgen -package=mblog -source=D:\allevery\go_all\testing\interface_mock\blog\blog.go -destination=D:\allevery\go_all\testing\interface_mock\test\mocks\blog\blog.go
//

// Package mblog is a generated GoMock package.
package mblog

import (
	reflect "reflect"
	blog "test/interface_mock/blog"

	gomock "go.uber.org/mock/gomock"
)

// MockBlog is a mock of Blog interface.
type MockBlog struct {
	ctrl     *gomock.Controller
	recorder *MockBlogMockRecorder
	isgomock struct{}
}

// MockBlogMockRecorder is the mock recorder for MockBlog.
type MockBlogMockRecorder struct {
	mock *MockBlog
}

// NewMockBlog creates a new mock instance.
func NewMockBlog(ctrl *gomock.Controller) *MockBlog {
	mock := &MockBlog{ctrl: ctrl}
	mock.recorder = &MockBlogMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlog) EXPECT() *MockBlogMockRecorder {
	return m.recorder
}

// ListPosts mocks base method.
func (m *MockBlog) ListPosts() []blog.Post {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPosts")
	ret0, _ := ret[0].([]blog.Post)
	return ret0
}

// ListPosts indicates an expected call of ListPosts.
func (mr *MockBlogMockRecorder) ListPosts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPosts", reflect.TypeOf((*MockBlog)(nil).ListPosts))
}
